{"uid":"b9dd7c3bb9c846eb","name":"test_search_flights_1_stop_3___DEL____AMD____25_05_2024____1_Stop__","fullName":"testcases.test_searchflights.TestSearchAndVerifyFilter#test_search_flights_1_stop_3___DEL____AMD____25_05_2024____1_Stop__","historyId":"3f2fd62a2f2f88901b00cf4dc563d187","time":{"start":1713139178424,"stop":1713139195285,"duration":16861},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//p[@class='font-lightgrey bold'][normalize-space()='1']\"}\n  (Session info: chrome=123.0.6312.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n0   chromedriver                        0x0000000108b010c8 chromedriver + 4595912\n1   chromedriver                        0x0000000108af8e33 chromedriver + 4562483\n2   chromedriver                        0x00000001086fc39a chromedriver + 381850\n3   chromedriver                        0x0000000108745f08 chromedriver + 683784\n4   chromedriver                        0x0000000108746191 chromedriver + 684433\n5   chromedriver                        0x000000010878ab14 chromedriver + 965396\n6   chromedriver                        0x000000010876816d chromedriver + 823661\n7   chromedriver                        0x000000010878814d chromedriver + 954701\n8   chromedriver                        0x0000000108767ee3 chromedriver + 823011\n9   chromedriver                        0x0000000108738be4 chromedriver + 629732\n10  chromedriver                        0x000000010873979e chromedriver + 632734\n11  chromedriver                        0x0000000108ac6fe2 chromedriver + 4358114\n12  chromedriver                        0x0000000108acbc2d chromedriver + 4377645\n13  chromedriver                        0x0000000108acb5a3 chromedriver + 4375971\n14  chromedriver                        0x0000000108acbed5 chromedriver + 4378325\n15  chromedriver                        0x0000000108ab0a05 chromedriver + 4266501\n16  chromedriver                        0x0000000108acc25d chromedriver + 4379229\n17  chromedriver                        0x0000000108aa3050 chromedriver + 4210768\n18  chromedriver                        0x0000000108ae9a98 chromedriver + 4500120\n19  chromedriver                        0x0000000108ae9c11 chromedriver + 4500497\n20  chromedriver                        0x0000000108af8a73 chromedriver + 4561523\n21  libsystem_pthread.dylib             0x00007ff816bfb18b _pthread_start + 99\n22  libsystem_pthread.dylib             0x00007ff816bf6ae3 thread_start + 15","statusTrace":"self = <testcases.test_searchflights.TestSearchAndVerifyFilter testMethod=test_search_flights_1_stop_3___DEL____AMD____25_05_2024____1_Stop__>, goingfrom = 'DEL', goingto = 'AMD'\ndate = '25/05/2024', stops = '1 Stop'\n\n    @data(*Utils.read_data_from_csv(\"/Users/k-bhatt/PythonTestFrameworkDemo/testdata/tdatacsv.csv\"))\n    @unpack\n    def test_search_flights_1_stop(self,goingfrom, goingto, date, stops):\n        # Provide going from location\n        search_flight_result =  self.launchPage.searchFlights(goingfrom, goingto, date)\n    \n        # To handle dynamic scroll\n        # self.launchPage.page_scroll()\n        self.launchPage.wait_for_loading_indicator()\n        # self.launchPage.page_scroll_to_bottom()\n        self.launchPage.page_scroll()\n    \n        # Select the filter 1 stop\n>       search_flight_result.filter_flights_by_stop(stops)\n\ntestcases/test_searchflights.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/search_flights_results_page.py:33: in filter_flights_by_stop\n    self.get_filter_by_one_stop_icon().click()\npages/search_flights_results_page.py:20: in get_filter_by_one_stop_icon\n    return self.driver.find_element(By.XPATH, self.FILTER_BY_1_STOP_ICON)\nenv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nenv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x111c4cc50>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...7ff816bfb18b _pthread_start + 99\\\\n22  libsystem_pthread.dylib             0x00007ff816bf6ae3 thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//p[@class='font-lightgrey bold'][normalize-space()='1']\"}\nE         (Session info: chrome=123.0.6312.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000108b010c8 chromedriver + 4595912\nE       1   chromedriver                        0x0000000108af8e33 chromedriver + 4562483\nE       2   chromedriver                        0x00000001086fc39a chromedriver + 381850\nE       3   chromedriver                        0x0000000108745f08 chromedriver + 683784\nE       4   chromedriver                        0x0000000108746191 chromedriver + 684433\nE       5   chromedriver                        0x000000010878ab14 chromedriver + 965396\nE       6   chromedriver                        0x000000010876816d chromedriver + 823661\nE       7   chromedriver                        0x000000010878814d chromedriver + 954701\nE       8   chromedriver                        0x0000000108767ee3 chromedriver + 823011\nE       9   chromedriver                        0x0000000108738be4 chromedriver + 629732\nE       10  chromedriver                        0x000000010873979e chromedriver + 632734\nE       11  chromedriver                        0x0000000108ac6fe2 chromedriver + 4358114\nE       12  chromedriver                        0x0000000108acbc2d chromedriver + 4377645\nE       13  chromedriver                        0x0000000108acb5a3 chromedriver + 4375971\nE       14  chromedriver                        0x0000000108acbed5 chromedriver + 4378325\nE       15  chromedriver                        0x0000000108ab0a05 chromedriver + 4266501\nE       16  chromedriver                        0x0000000108acc25d chromedriver + 4379229\nE       17  chromedriver                        0x0000000108aa3050 chromedriver + 4210768\nE       18  chromedriver                        0x0000000108ae9a98 chromedriver + 4500120\nE       19  chromedriver                        0x0000000108ae9c11 chromedriver + 4500497\nE       20  chromedriver                        0x0000000108af8a73 chromedriver + 4561523\nE       21  libsystem_pthread.dylib             0x00007ff816bfb18b _pthread_start + 99\nE       22  libsystem_pthread.dylib             0x00007ff816bf6ae3 thread_start + 15\n\nenv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1713139049589,"stop":1713139049590,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_unittest_setUpClass_fixture_TestSearchAndVerifyFilter","time":{"start":1713139049590,"stop":1713139049590,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"url","time":{"start":1713139049590,"stop":1713139049590,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1713139171315,"stop":1713139178423,"duration":7108},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"class_setup","time":{"start":1713139178423,"stop":1713139178423,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//p[@class='font-lightgrey bold'][normalize-space()='1']\"}\n  (Session info: chrome=123.0.6312.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n0   chromedriver                        0x0000000108b010c8 chromedriver + 4595912\n1   chromedriver                        0x0000000108af8e33 chromedriver + 4562483\n2   chromedriver                        0x00000001086fc39a chromedriver + 381850\n3   chromedriver                        0x0000000108745f08 chromedriver + 683784\n4   chromedriver                        0x0000000108746191 chromedriver + 684433\n5   chromedriver                        0x000000010878ab14 chromedriver + 965396\n6   chromedriver                        0x000000010876816d chromedriver + 823661\n7   chromedriver                        0x000000010878814d chromedriver + 954701\n8   chromedriver                        0x0000000108767ee3 chromedriver + 823011\n9   chromedriver                        0x0000000108738be4 chromedriver + 629732\n10  chromedriver                        0x000000010873979e chromedriver + 632734\n11  chromedriver                        0x0000000108ac6fe2 chromedriver + 4358114\n12  chromedriver                        0x0000000108acbc2d chromedriver + 4377645\n13  chromedriver                        0x0000000108acb5a3 chromedriver + 4375971\n14  chromedriver                        0x0000000108acbed5 chromedriver + 4378325\n15  chromedriver                        0x0000000108ab0a05 chromedriver + 4266501\n16  chromedriver                        0x0000000108acc25d chromedriver + 4379229\n17  chromedriver                        0x0000000108aa3050 chromedriver + 4210768\n18  chromedriver                        0x0000000108ae9a98 chromedriver + 4500120\n19  chromedriver                        0x0000000108ae9c11 chromedriver + 4500497\n20  chromedriver                        0x0000000108af8a73 chromedriver + 4561523\n21  libsystem_pthread.dylib             0x00007ff816bfb18b _pthread_start + 99\n22  libsystem_pthread.dylib             0x00007ff816bf6ae3 thread_start + 15","statusTrace":"self = <testcases.test_searchflights.TestSearchAndVerifyFilter testMethod=test_search_flights_1_stop_3___DEL____AMD____25_05_2024____1_Stop__>, goingfrom = 'DEL', goingto = 'AMD'\ndate = '25/05/2024', stops = '1 Stop'\n\n    @data(*Utils.read_data_from_csv(\"/Users/k-bhatt/PythonTestFrameworkDemo/testdata/tdatacsv.csv\"))\n    @unpack\n    def test_search_flights_1_stop(self,goingfrom, goingto, date, stops):\n        # Provide going from location\n        search_flight_result =  self.launchPage.searchFlights(goingfrom, goingto, date)\n    \n        # To handle dynamic scroll\n        # self.launchPage.page_scroll()\n        self.launchPage.wait_for_loading_indicator()\n        # self.launchPage.page_scroll_to_bottom()\n        self.launchPage.page_scroll()\n    \n        # Select the filter 1 stop\n>       search_flight_result.filter_flights_by_stop(stops)\n\ntestcases/test_searchflights.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/search_flights_results_page.py:33: in filter_flights_by_stop\n    self.get_filter_by_one_stop_icon().click()\npages/search_flights_results_page.py:20: in get_filter_by_one_stop_icon\n    return self.driver.find_element(By.XPATH, self.FILTER_BY_1_STOP_ICON)\nenv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nenv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x111c4cc50>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...7ff816bfb18b _pthread_start + 99\\\\n22  libsystem_pthread.dylib             0x00007ff816bf6ae3 thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//p[@class='font-lightgrey bold'][normalize-space()='1']\"}\nE         (Session info: chrome=123.0.6312.123); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000108b010c8 chromedriver + 4595912\nE       1   chromedriver                        0x0000000108af8e33 chromedriver + 4562483\nE       2   chromedriver                        0x00000001086fc39a chromedriver + 381850\nE       3   chromedriver                        0x0000000108745f08 chromedriver + 683784\nE       4   chromedriver                        0x0000000108746191 chromedriver + 684433\nE       5   chromedriver                        0x000000010878ab14 chromedriver + 965396\nE       6   chromedriver                        0x000000010876816d chromedriver + 823661\nE       7   chromedriver                        0x000000010878814d chromedriver + 954701\nE       8   chromedriver                        0x0000000108767ee3 chromedriver + 823011\nE       9   chromedriver                        0x0000000108738be4 chromedriver + 629732\nE       10  chromedriver                        0x000000010873979e chromedriver + 632734\nE       11  chromedriver                        0x0000000108ac6fe2 chromedriver + 4358114\nE       12  chromedriver                        0x0000000108acbc2d chromedriver + 4377645\nE       13  chromedriver                        0x0000000108acb5a3 chromedriver + 4375971\nE       14  chromedriver                        0x0000000108acbed5 chromedriver + 4378325\nE       15  chromedriver                        0x0000000108ab0a05 chromedriver + 4266501\nE       16  chromedriver                        0x0000000108acc25d chromedriver + 4379229\nE       17  chromedriver                        0x0000000108aa3050 chromedriver + 4210768\nE       18  chromedriver                        0x0000000108ae9a98 chromedriver + 4500120\nE       19  chromedriver                        0x0000000108ae9c11 chromedriver + 4500497\nE       20  chromedriver                        0x0000000108af8a73 chromedriver + 4561523\nE       21  libsystem_pthread.dylib             0x00007ff816bfb18b _pthread_start + 99\nE       22  libsystem_pthread.dylib             0x00007ff816bf6ae3 thread_start + 15\n\nenv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException","steps":[],"attachments":[{"uid":"8748a54924d1331c","name":"Screenshot on failure","source":"8748a54924d1331c.png","type":"image/png","size":54461},{"uid":"526a40bc24bebd6d","name":"log","source":"526a40bc24bebd6d.txt","type":"text/plain","size":157}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1713139195521,"stop":1713139195626,"duration":105},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_unittest_setUpClass_fixture_TestSearchAndVerifyFilter::0","time":{"start":1713139219387,"stop":1713139219387,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('setup')"},{"name":"parentSuite","value":"testcases"},{"name":"suite","value":"test_searchflights"},{"name":"subSuite","value":"TestSearchAndVerifyFilter"},{"name":"host","value":"PC2368"},{"name":"thread","value":"87291-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.test_searchflights"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('setup')"]},"source":"b9dd7c3bb9c846eb.json","parameterValues":[]}